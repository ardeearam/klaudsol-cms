import CacheContext from "@/components/contexts/CacheContext";
import { AUTO_PASSWORD, CUSTOM_PASSWORD, writeUsers } from "@/lib/Constants";
import { useFormikContext } from "formik";
import React, { useContext, useEffect } from "react";
import AppRadioButton from "../buttons/AppRadioButton";

const PasswordSelection = ({ setRandomPassword, passwordMode, setPasswordMode }) => {
    const { setFieldValue, setTouched, values } = useFormikContext();
    const { capabilities } = useContext(CacheContext);

    const handlePasswordMode = async (e) => {
        const mode = e.target.value;

        if (mode === AUTO_PASSWORD) {
            const toBeUntouched = {
                password: false,
                confirmPassword: false
            }

            setTouched(toBeUntouched);
            await setRandomPassword();
        } else {
            setFieldValue('password', '');
            setFieldValue('confirmPassword', '');
            setFieldValue('forcePasswordChange', false);
        }

        setPasswordMode(e.target.value);
    }

    useEffect(() => {
        const isEmptyPassword = !values.password && !values.changePassword;
        if (passwordMode === AUTO_PASSWORD && isEmptyPassword) setRandomPassword();
    }, [passwordMode]);

    return (
        <div className="mb-4">
            <AppRadioButton
                title="Autogenerated password"
                value={AUTO_PASSWORD}
                checked={passwordMode === AUTO_PASSWORD}
                onChange={handlePasswordMode}
                disabled={!capabilities.includes(writeUsers)}
            />
            <AppRadioButton
                title="Custom password"
                value={CUSTOM_PASSWORD}
                checked={passwordMode === CUSTOM_PASSWORD}
                onChange={handlePasswordMode}
                disabled={!capabilities.includes(writeUsers)}
            />
        </div>
    );
}

export default PasswordSelection;
